@startuml
' uncomment the line below if you're using computer with a retina display
' skinparam dpi 300
!define Table(name,desc) class name as "desc" << (T,#FFAAAA) >>
' we use bold for primary key
' green color for unique
' and underscore for not_null
!define primary_key(x) <b>x</b>
!define unique(x) <color:green>x</color>
!define foreign_key(x) <color:red>x</color>
!define not_null(x) <u>x</u>
' other tags available:
' <i></i>
' <back:COLOR></color>, where color is a color name or html color code
' (#FFAACC)
' see: http://plantuml.com/classes.html#More
hide methods
hide stereotypes

' entities

Table(user, "user\n(user in system sorwid)") {
primary_key(id_user) INTEGER
not_null(unique(username)) VARCHAR[32]
not_null(password) VARCHAR[64]
not_null(point) INT default=0
}


Table(question, "question\n(question in system sorwid)") {
primary_key(id_question)INTEGER
not_null(title)CHAR[200]
not_null(tags)VARCHAR[200]
not_null(date)datetime
not_null foreign_key(id_user)INTEGER
not_null (closed)boolean default=FALSE
not_null(positive_vote)INTEGER default=0
not_null(negative_vote)INTEGER default=0
not_null (total_point)INTEGER default=0
}


Table(answer, "answer\n(answer in system sorwid)") {
primary_key(id_answer)INTEGER
foreign_key(id_question)INTEGER
not_null(answer_text)TEXT
not_null(date)datetime
update datetime 
answer boolean default=FALSE
not_null(positive_vote)INTEGER default=0
not_null(negative_vote)INTEGER default=0
not_null(total_point)INTEGER default=0
}


Table(question_coment, "question_coment\n(question_coment in system sorwid)") {
primary_key(id_question_coment)INTEGER
(coment_text)CHAR
foreign_key(id_question)INTEGER
}


Table(answer_coment, "answer_coment\n(answer_coment in system sorwid)") {
primary_key(id_answer_coment)INTEGER
(answer_text) CHAR
foreign_key(id_answer)INTEGER
}


Table(vote, "vote\n(vote in system sorwid)") {
primary_key(vote)INTEGER
foreign_key(id_user)INTEGER

}

' relationships
' one-to-many relationship

user "1" --> "*" question: "A user may be \nin many question"

user "1" --> "*" answer: "A user may be \nin many answer"


user "1" --> "*" question_coment: "A user may be \nin many question coment"

user "1" --> "*" answer_coment: "A user may be \nin many answer coment"

'one-to-one relationship

user "1" --> "1" vote: "A user may be \nin one vote"

@enduml
